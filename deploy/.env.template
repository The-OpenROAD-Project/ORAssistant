# ORAssistant GKE Deployment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# PROJECT CONFIGURATION
# =============================================================================
PROJECT_ID=your-gcp-project-id
DOMAIN=your-domain.com
REGION=us-central1
CLUSTER_NAME=orassistant-cluster
NAMESPACE=orassistant

# =============================================================================
# CONTAINER IMAGES
# =============================================================================
BACKEND_IMAGE=gcr.io/${PROJECT_ID}/orassistant-backend:latest
FRONTEND_IMAGE=gcr.io/${PROJECT_ID}/orassistant-frontend:latest
INIT_IMAGE=python:3.12-slim
CERT_MONITOR_IMAGE=alpine:latest

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
PRIMARY_DOMAIN=orassistant.${DOMAIN}
WWW_DOMAIN=www.orassistant.${DOMAIN}
DEV_DOMAIN=dev.orassistant.${DOMAIN}
STAGING_DOMAIN=staging.orassistant.${DOMAIN}
PROD_DOMAIN=orassistant.${DOMAIN}
ADMIN_EMAIL=admin@${DOMAIN}

# =============================================================================
# GKE CLUSTER CONFIGURATION
# =============================================================================
# Node pool configuration
BACKEND_NODE_POOL=backend-pool
FRONTEND_NODE_POOL=frontend-pool
BACKEND_MACHINE_TYPE=n1-standard-4
FRONTEND_MACHINE_TYPE=n1-standard-2
BACKEND_DISK_SIZE=50GB
FRONTEND_DISK_SIZE=20GB
DISK_TYPE=pd-ssd

# Zone configuration
ZONE_A=${REGION}-a
ZONE_B=${REGION}-b
ZONE_C=${REGION}-c

# Autoscaling
BACKEND_MIN_NODES=1
BACKEND_MAX_NODES=3
FRONTEND_MIN_NODES=1
FRONTEND_MAX_NODES=2

# =============================================================================
# APPLICATION SECRETS (Base64 encode before use)
# =============================================================================
# AI/ML API Keys
OPENAI_API_KEY=
GOOGLE_API_KEY=
HUGGINGFACE_TOKEN=
ANTHROPIC_API_KEY=
COHERE_API_KEY=

# Database connections
MONGODB_URI=

# External integrations
GOOGLE_SHEETS_CREDENTIALS=

# Application secrets
JWT_SECRET_KEY=
SESSION_SECRET=

# Docker registry credentials (JSON format, base64 encoded)
DOCKER_CONFIG_JSON=

# Custom TLS certificates (base64 encoded)
TLS_CERT=
TLS_KEY=

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Backend configuration
BACKEND_URL=0.0.0.0
BACKEND_WORKERS=2
BACKEND_PORT=8000

# Frontend configuration
FRONTEND_PORT=3000
NODE_ENV=production

# Application settings
LOG_LEVEL=info
ENVIRONMENT=production

# Performance tuning
MAX_CONCURRENT_REQUESTS=100
REQUEST_TIMEOUT=30s
VECTOR_SEARCH_TIMEOUT=10s

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
# RAG Dataset
HUGGINGFACE_REPO=The-OpenROAD-Project/ORAssistant_RAG_Dataset
RAG_DATA_PATH=/ORAssistant-backend/data
VECTOR_STORE_PATH=/ORAssistant-backend/data/vectorstore

# Persistent Volume
PV_NAME=rag-dataset-pv
PVC_NAME=rag-dataset-pvc
STORAGE_SIZE=10Gi
STORAGE_CLASS=ssd-regional
DISK_NAME=rag-dataset-disk

# =============================================================================
# RESOURCE LIMITS
# =============================================================================
# Backend resources
BACKEND_CPU_REQUEST=1000m
BACKEND_CPU_LIMIT=2000m
BACKEND_MEMORY_REQUEST=4Gi
BACKEND_MEMORY_LIMIT=8Gi

# Frontend resources
FRONTEND_CPU_REQUEST=100m
FRONTEND_CPU_LIMIT=500m
FRONTEND_MEMORY_REQUEST=512Mi
FRONTEND_MEMORY_LIMIT=1Gi

# Init container resources
INIT_CPU_REQUEST=200m
INIT_CPU_LIMIT=500m
INIT_MEMORY_REQUEST=512Mi
INIT_MEMORY_LIMIT=1Gi

# =============================================================================
# AUTOSCALING CONFIGURATION
# =============================================================================
# Backend HPA
BACKEND_MIN_REPLICAS=1
BACKEND_MAX_REPLICAS=3
BACKEND_CPU_TARGET=70
BACKEND_MEMORY_TARGET=80

# Frontend HPA
FRONTEND_MIN_REPLICAS=1
FRONTEND_MAX_REPLICAS=2
FRONTEND_CPU_TARGET=70
FRONTEND_MEMORY_TARGET=80

# Scaling behavior
SCALE_DOWN_STABILIZATION=300
SCALE_UP_STABILIZATION=60
SCALE_DOWN_PERCENT=50
SCALE_UP_PERCENT=100

# =============================================================================
# NETWORKING CONFIGURATION
# =============================================================================
# Load balancer
STATIC_IP_NAME=orassistant-ip
BACKEND_LB_TYPE=Internal
FRONTEND_LB_TYPE=External

# Service configuration
BACKEND_SERVICE_NAME=backend-service
FRONTEND_SERVICE_NAME=frontend-service
BACKEND_INTERNAL_LB=backend-internal-lb
FRONTEND_EXTERNAL_LB=frontend-external-lb

# Network policies
ALLOW_DNS_PORT=53
ALLOW_HTTP_PORT=80
ALLOW_HTTPS_PORT=443
ALLOW_MONGODB_PORT=27017

# =============================================================================
# SSL CERTIFICATE CONFIGURATION
# =============================================================================
# Certificate names
MANAGED_CERT_NAME=orassistant-ssl-cert
LETSENCRYPT_CERT_NAME=orassistant-letsencrypt-cert
TLS_SECRET_NAME=orassistant-tls-secret

# SSL policy
SSL_POLICY_NAME=orassistant-ssl-policy
SSL_PROFILE=MODERN
MIN_TLS_VERSION=TLS_1_2

# cert-manager
CERT_MANAGER_VERSION=v1.13.0
LETSENCRYPT_SERVER=https://acme-v02.api.letsencrypt.org/directory
CERT_ISSUER_NAME=letsencrypt-prod

# Certificate monitoring
CERT_EXPIRY_THRESHOLD=30
CERT_CHECK_SCHEDULE="0 9 * * *"

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
# Backend health checks
BACKEND_HEALTH_PATH=/healthcheck
BACKEND_LIVENESS_INITIAL_DELAY=180
BACKEND_LIVENESS_PERIOD=30
BACKEND_LIVENESS_TIMEOUT=10
BACKEND_READINESS_INITIAL_DELAY=60
BACKEND_READINESS_PERIOD=10
BACKEND_STARTUP_INITIAL_DELAY=30

# Frontend health checks
FRONTEND_HEALTH_PATH=/
FRONTEND_LIVENESS_INITIAL_DELAY=30
FRONTEND_LIVENESS_PERIOD=30
FRONTEND_READINESS_INITIAL_DELAY=10
FRONTEND_READINESS_PERIOD=10
FRONTEND_STARTUP_INITIAL_DELAY=10

# Health check settings
HEALTH_CHECK_INTERVAL=10
HEALTH_CHECK_TIMEOUT=5
HEALTH_CHECK_HEALTHY_THRESHOLD=2
HEALTH_CHECK_UNHEALTHY_THRESHOLD=3
CONNECTION_DRAINING_TIMEOUT=60

# =============================================================================
# MAINTENANCE AND MONITORING
# =============================================================================
# Maintenance window
MAINTENANCE_START=2023-01-01T09:00:00Z
MAINTENANCE_END=2023-01-01T17:00:00Z
MAINTENANCE_RECURRENCE="FREQ=WEEKLY;BYDAY=SA"

# Logging and monitoring
LOGGING_CONFIG=SYSTEM,WORKLOAD
MONITORING_CONFIG=SYSTEM

# Session affinity
SESSION_AFFINITY_TYPE=CLIENT_IP
SESSION_AFFINITY_TTL=3600

# =============================================================================
# DEVELOPMENT CONFIGURATION (Optional)
# =============================================================================
# Development settings
DEV_MODE=false
DEBUG_ENABLED=false
ENABLE_PREEMPTIBLE_NODES=false

# Image pull policy
IMAGE_PULL_POLICY=Always

# Node tolerations
BACKEND_TAINT_KEY=backend-workload
FRONTEND_TAINT_KEY=frontend-workload
TAINT_VALUE=true
TAINT_EFFECT=NoSchedule